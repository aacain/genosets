/*
 * Copyright (C) 2014 Aurora Cain
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package edu.uncc.genosets.orthomcl;

import javax.swing.ImageIcon;
import javax.swing.text.BadLocationException;
import org.openide.util.Exceptions;
import org.openide.util.ImageUtilities;

/**
 *
 * @author lucy
 */
public class ValidatingPanel extends javax.swing.JPanel {

    private final ImageIcon validIcon;
    private final ImageIcon errorIcon;
    private final PathValidation validator;
    private final ImageIcon warnIcon;

    /**
     * Creates new form ValidatingPanel
     */
    public ValidatingPanel(PathValidation validator) {
        this.validator = validator;
        validIcon = ImageUtilities.loadImageIcon("edu/uncc/genosets/icons/check.png", false);
        errorIcon = ImageUtilities.loadImageIcon("edu/uncc/genosets/icons/error.png", false);
        warnIcon = ImageUtilities.loadImageIcon("edu/uncc/genosets/icons/warning.png", false);
        initComponents();
        printResults();

    }

    private void printResults() {
        for (PathValidation.PathVariable var : validator.getPathVariables()) {
            printResults(var);
        }
        //test the database
        if (validator.isDbUserValid()) {
            textPane.insertIcon(validIcon);
            setText("Database connection valid.\n");
            if (!validator.isDbValid()) {
                textPane.insertIcon(errorIcon);
                setText("Database already exists and cannot be created.\n");
            }
        } else {
            textPane.insertIcon(errorIcon);
            setText("Database connection invalid. Check database username and password.\n");
        }
    }

    private void setText(String string) {
        try {
            textPane.getDocument().insertString(textPane.getDocument().getLength(), string, null);
        } catch (BadLocationException ex) {
            Exceptions.printStackTrace(ex);
        }
    }

    private void printResults(PathValidation.PathVariable var) {
        StringBuilder bldr = new StringBuilder(var.getVariableName());
        if (var.isValid()) {
            textPane.insertIcon(validIcon);
            bldr.append(" is valid.");
        } else {
            bldr.append(" is invalid. ");
            if (var.isSystemPathValid()) {
                textPane.insertIcon(warnIcon);
                bldr.append(" The user supplied variable is invalid.  However, the variable is found on the path at ").append(var.getSystemPath()).append(" Please update your settings in the wizard.");
            } else {
                textPane.insertIcon(errorIcon);
                bldr.append(" The user supplied variable is invalid and the variable could not be found on the path.");
            }
        }
        bldr.append("\n");
        setText(bldr.toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        textPane = new javax.swing.JTextPane();

        jScrollPane1.setViewportView(textPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane textPane;
    // End of variables declaration//GEN-END:variables
}
