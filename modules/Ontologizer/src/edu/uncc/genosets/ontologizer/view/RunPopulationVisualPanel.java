/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.uncc.genosets.ontologizer.view;

import edu.uncc.genosets.datamanager.dimension.FocusEntity;
import edu.uncc.genosets.studyset.StudySet;
import edu.uncc.genosets.studyset.StudySetManager.StudySetManagerFactory;
import java.util.LinkedList;
import java.util.List;
import javax.swing.ActionMap;
import javax.swing.JPanel;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.ExplorerUtils;
import org.openide.explorer.view.OutlineView;
import org.openide.nodes.AbstractNode;
import org.openide.nodes.Node;
import org.openide.util.Lookup;

public final class RunPopulationVisualPanel extends JPanel implements ExplorerManager.Provider {

    private final ExplorerManager em;
    private final Lookup lookup;
    private final StudySetNodeFactory ssFactory;

    /**
     * Creates new form RunOntologizerWizardVisualPanel1
     */
    public RunPopulationVisualPanel(FocusEntity focusEntity) {
        initComponents();
        this.em = new ExplorerManager();
        ActionMap map = this.getActionMap();
        this.lookup = ExplorerUtils.createLookup(this.em, map);
        List<StudySet> list = new LinkedList<StudySet>();
        for (StudySet studySet : StudySetManagerFactory.getDefault().getStudySets()) {
            if(studySet.getFocusEntity() == focusEntity){
                list.add(studySet);
            }
        }
        //List<StudySet> list = new LinkedList<StudySet>(StudySetManagerFactory.getDefault().getStudySets());
        ssFactory = new StudySetNodeFactory(list);
        for (Node node : ssFactory.getNodes(true)) {
            if (node instanceof StudySetNodeFactory.StudySetNode) {
                StudySetNodeFactory.StudySetNode ssn = (StudySetNodeFactory.StudySetNode) node;
            }
        }
        AbstractNode root = new AbstractNode(ssFactory);
        em.setRootContext(root);
    }

    @Override
    public String getName() {
        return "Select Population Set";
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        explorerView = new OutlineView("Population sets");

        ((OutlineView)explorerView).getOutline().setRootVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(explorerView, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(explorerView, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                .addGap(60, 60, 60))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane explorerView;
    // End of variables declaration//GEN-END:variables

    @Override
    public ExplorerManager getExplorerManager() {
        return this.em;
    }

    public List<StudySet> getSelectedStudySets() {
        List<StudySet> studySets = new LinkedList<StudySet>();
        for (Node node : ssFactory.snapshot()) {
            if (node instanceof StudySetNodeFactory.StudySetNode) {
                StudySetNodeFactory.StudySetNode ssn = (StudySetNodeFactory.StudySetNode) node;
                if (ssn.isSelected()) {
                    studySets.add(ssn.getStudySet());
                }
            }
        }
        return studySets;
    }
}
