/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.uncc.genosets.phylogeny.view;

import java.awt.BorderLayout;
import java.io.File;
import java.io.IOException;
import java.util.Arrays;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.tree.DefaultMutableTreeNode;
import org.forester.archaeopteryx.*;
import org.forester.io.parsers.PhylogenyParser;
import org.forester.io.parsers.util.ParserUtils;
import org.forester.phylogeny.Phylogeny;
import org.forester.phylogeny.PhylogenyMethods;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.filesystems.FileChooserBuilder;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.util.NbPreferences;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//edu.uncc.genosets.phylogeny.view//ForesterView//EN",
autostore = false)
@TopComponent.Description(preferredID = "ForesterViewTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_NEVER)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "edu.uncc.genosets.phylogeny.view.ForesterViewTopComponent")
@ActionReference(path = "Menu/Window", position = 230)
@TopComponent.OpenActionRegistration(displayName = "#CTL_ForesterViewAction",
preferredID = "ForesterViewTopComponent")
@Messages({
    "CTL_ForesterViewAction=ForesterView",
    "CTL_ForesterViewTopComponent=ForesterView Window",
    "HINT_ForesterViewTopComponent=This is a ForesterView window"
})
public final class ForesterViewTopComponent extends TopComponent implements MainFrame_AAC {

    private MainPanel_AAC m_mainPanel = null;
    private Configuration config = null;

    public ForesterViewTopComponent() {
        initComponents();
        panelLower.setLayout(new BorderLayout());
        m_mainPanel = getForesterMainFrame();
        panelLower.add(m_mainPanel, BorderLayout.CENTER);
        m_mainPanel.displayChanged();
        setName(Bundle.CTL_ForesterViewTopComponent());
        setToolTipText(Bundle.HINT_ForesterViewTopComponent());
    }

    private MainPanel_AAC getForesterMainFrame() {
        if (m_mainPanel == null) {
            // Display of the tree(s) with Archaeopteryx.
            config = new Configuration("_aptx_configuration_file", false, false, true);
            MainPanel_AAC panel = new MainPanel_AAC(config);
            m_mainPanel = panel;
        }
        return m_mainPanel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        openButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        panelLower = new javax.swing.JPanel();

        org.openide.awt.Mnemonics.setLocalizedText(openButton, org.openide.util.NbBundle.getMessage(ForesterViewTopComponent.class, "ForesterViewTopComponent.openButton.text")); // NOI18N
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(closeButton, org.openide.util.NbBundle.getMessage(ForesterViewTopComponent.class, "ForesterViewTopComponent.closeButton.text")); // NOI18N
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(openButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeButton)
                .addGap(0, 276, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(openButton)
                    .addComponent(closeButton))
                .addGap(0, 17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelLowerLayout = new javax.swing.GroupLayout(panelLower);
        panelLower.setLayout(panelLowerLayout);
        panelLowerLayout.setHorizontalGroup(
            panelLowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelLowerLayout.setVerticalGroup(
            panelLowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 254, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelLower, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelLower, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButtonActionPerformed
        //open file chooser
        //The default dir to use if no value is stored
        File home = new File(System.getProperty("user.home"));
        FileChooserBuilder bldr = new FileChooserBuilder("AddFileDirectory").setTitle("Select File").
                setDefaultWorkingDirectory(home).setApproveText("Open").setFilesOnly(true);
        File[] toAdd = bldr.showMultiOpenDialog();
        //Result will be null if the user clicked cancel or closed the dialog w/o OK
        if (toAdd != null) {
            //set the directory as the parent
            for (File file : toAdd) {
                NbPreferences.forModule(FileChooserBuilder.class).put("AddFileDirectory", file.getParent());
                Phylogeny[] phys = null;
                // Reading-in of (a) tree(s) from a file.
                PhylogenyParser parser = null;
                try {
                    parser = ParserUtils.createParserDependingOnFileType(file, true);
                } catch (final IOException e) {
                    e.printStackTrace();
                }
                try {
                    phys = PhylogenyMethods.readPhylogenies(parser, file);
                } catch (final IOException e) {
                    e.printStackTrace();
                }
                if (phys != null) {
                    for (Phylogeny phy : phys) {
                        getForesterMainFrame().addPhylogenyInNewTab(phy, config, phy.getName(), null);
                    }
                }
            }
        }

    }//GEN-LAST:event_openButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        getForesterMainFrame().closeCurrentPanel();
    }//GEN-LAST:event_closeButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton openButton;
    private javax.swing.JPanel panelLower;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        if (m_mainPanel == null) {
            m_mainPanel = getForesterMainFrame();
            panelLower.add(m_mainPanel, BorderLayout.CENTER);
            m_mainPanel.displayChanged();
        }
    }

    @Override
    public void componentClosed() {
        panelLower.remove(m_mainPanel);
        m_mainPanel = null;
        config = null;
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
