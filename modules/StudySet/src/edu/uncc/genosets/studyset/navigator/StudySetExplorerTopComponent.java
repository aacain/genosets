/*
 * 
 * 
 */
package edu.uncc.genosets.studyset.navigator;

import edu.uncc.genosets.datamanager.api.DataManager;
import edu.uncc.genosets.studyset.StudySetManager;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.ActionMap;
import javax.swing.SwingUtilities;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.ExplorerUtils;
import org.openide.explorer.view.BeanTreeView;
import org.openide.nodes.AbstractNode;
import org.openide.nodes.Node;
import org.openide.util.HelpCtx;
import org.openide.util.Lookup;
import org.openide.util.NbBundle;
import org.openide.util.WeakListeners;
import org.openide.util.lookup.AbstractLookup;
import org.openide.util.lookup.InstanceContent;
import org.openide.util.lookup.ProxyLookup;
import org.openide.windows.TopComponent;

/**
 * Top component which displays the study sets.
 */
@ConvertAsProperties(dtd = "-//edu.uncc.genosets.studyset.navigator//StudySetExplorer//EN",
        autostore = false)
@TopComponent.Description(preferredID = "StudySetExplorerTopComponent",
        iconBase = "edu/uncc/genosets/studyset/resources/project.png",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "explorer", openAtStartup = true, position = 10)
@ActionID(category = "Window", id = "edu.uncc.genosets.studyset.navigator.StudySetExplorerTopComponent")
@ActionReference(path = "Menu/Window", position = 110)
@TopComponent.OpenActionRegistration(displayName = "#CTL_StudySetExplorerAction",
        preferredID = "StudySetExplorerTopComponent")
@NbBundle.Messages({
    "CTL_StudySetExplorerAction=StudySets",
    "CTL_StudySetExplorerTopComponent=StudySets",
    "HINT_StudySetExplorerTopComponent=Displays the Study Sets"
})
public final class StudySetExplorerTopComponent extends TopComponent implements ExplorerManager.Provider {

    private ExplorerManager em;
    private Lookup lookup;
    private PropertyChangeListener studySetChangeListener;

    public StudySetExplorerTopComponent() {
        this.em = new ExplorerManager();
        ActionMap map = this.getActionMap();
        this.lookup = ExplorerUtils.createLookup(this.em, map);
        InstanceContent ic = new InstanceContent();
        ic.add(this);
        this.associateLookup(new ProxyLookup(new AbstractLookup(ic), this.lookup));
        
        initComponents();
        setName(Bundle.CTL_StudySetExplorerTopComponent());
        setToolTipText(Bundle.HINT_StudySetExplorerTopComponent());
        this.studySetChangeListener = new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                if (evt.getPropertyName().equals(StudySetManager.PROP_DB_CHANGE)) {
                    dataChanged();
                }
            }
        };
        StudySetManager.StudySetManagerFactory.getDefault().addPropertyChangeListener(WeakListeners.propertyChange(studySetChangeListener, StudySetManager.StudySetManagerFactory.getDefault()));
        dataChanged();
    }

    private void dataChanged() {
        boolean eventDispatchThread = SwingUtilities.isEventDispatchThread();
        this.em.setRootContext(Node.EMPTY);
        FocusEntityNodeFactory factory = new FocusEntityNodeFactory();
        Node root = new AbstractNode(factory);
        this.em.setRootContext(root);
        root.setDisplayName("Study Sets");
        Node[] nodes = factory.getNodes();
        for (Node node : nodes) {
            node.getChildren();
        }
        BeanTreeView view = (BeanTreeView) studySetPane;
        for (Node node : factory.getNodes()) {
            view.expandNode(node);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        studySetPane = new BeanTreeView();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(studySetPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(studySetPane, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane studySetPane;
    // End of variables declaration//GEN-END:variables

    @Override
    public HelpCtx getHelpCtx() {
        return new HelpCtx("edu.uncc.genosets.studyset.about");
    }

    @Override
    public int getPersistenceType() {
        return TopComponent.PERSISTENCE_ALWAYS;
    }

    @Override
    public void componentOpened() {
    }

    @Override
    public void componentClosed() {
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public ExplorerManager getExplorerManager() {
        return this.em;
    }
}
