/*
 * Copyright (C) 2014 Aurora Cain
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package edu.uncc.genosets.rast;

import edu.uncc.genosets.datamanager.api.DataManager;
import edu.uncc.genosets.datamanager.entity.Organism;
import edu.uncc.genosets.datamanager.persister.OrganismPersister;
import edu.uncc.genosets.gffloader.NewOrganismPanel;
import edu.uncc.genosets.gffloader.OrganismChildFactory;
import java.awt.Dialog;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyVetoException;
import java.io.File;
import java.util.Collections;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.event.ChangeListener;
import org.openide.DialogDescriptor;
import org.openide.DialogDisplayer;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.view.ChoiceView;
import org.openide.filesystems.FileChooserBuilder;
import org.openide.nodes.AbstractNode;
import org.openide.nodes.Children;
import org.openide.nodes.Node;
import org.openide.util.ChangeSupport;
import org.openide.util.NbPreferences;
import org.openide.util.WeakListeners;

public final class RastLoadVisualPanel1 extends JPanel implements ExplorerManager.Provider, PropertyChangeListener {

    private File rastFile;
    private File fastaFile;
    private RastLoadWizardPanel1.ID_TYPE idType;
    private ChangeSupport cs = new ChangeSupport(this);
    private ExplorerManager em;

    public File getRastFile() {
        return rastFile;
    }

    public File getFastaFile() {
        return fastaFile;
    }

    /**
     * Creates new form RastLoadVisualPanel1
     */
    public RastLoadVisualPanel1() {
        em = new ExplorerManager();
        initComponents();
        updateRadio();
        updateOrganisms(null);
        em.addPropertyChangeListener(WeakListeners.propertyChange(this, em));
    }

    @Override
    public String getName() {
        return "Select Files";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        rastFileTextField = new javax.swing.JTextField();
        rastButton = new javax.swing.JButton();
        fastaFileLabel = new javax.swing.JLabel();
        fastaFileTextField = new javax.swing.JTextField();
        fastaButton = new javax.swing.JButton();
        loadFastaButton = new javax.swing.JRadioButton();
        genosetsIdButton = new javax.swing.JRadioButton();
        lookupButton = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        organismComboBox = new ChoiceView();
        newButton = new javax.swing.JButton();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(RastLoadVisualPanel1.class, "RastLoadVisualPanel1.jLabel1.text")); // NOI18N

        rastFileTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        rastFileTextField.setText(org.openide.util.NbBundle.getMessage(RastLoadVisualPanel1.class, "RastLoadVisualPanel1.rastFileTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(rastButton, org.openide.util.NbBundle.getMessage(RastLoadVisualPanel1.class, "RastLoadVisualPanel1.rastButton.text")); // NOI18N
        rastButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rastButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(fastaFileLabel, org.openide.util.NbBundle.getMessage(RastLoadVisualPanel1.class, "RastLoadVisualPanel1.fastaFileLabel.text")); // NOI18N
        fastaFileLabel.setEnabled(false);

        fastaFileTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        fastaFileTextField.setText(org.openide.util.NbBundle.getMessage(RastLoadVisualPanel1.class, "RastLoadVisualPanel1.fastaFileTextField.text")); // NOI18N
        fastaFileTextField.setEnabled(false);

        org.openide.awt.Mnemonics.setLocalizedText(fastaButton, org.openide.util.NbBundle.getMessage(RastLoadVisualPanel1.class, "RastLoadVisualPanel1.fastaButton.text")); // NOI18N
        fastaButton.setEnabled(false);
        fastaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fastaButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(loadFastaButton);
        loadFastaButton.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(loadFastaButton, org.openide.util.NbBundle.getMessage(RastLoadVisualPanel1.class, "RastLoadVisualPanel1.loadFastaButton.text")); // NOI18N
        loadFastaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadFastaButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(genosetsIdButton);
        org.openide.awt.Mnemonics.setLocalizedText(genosetsIdButton, org.openide.util.NbBundle.getMessage(RastLoadVisualPanel1.class, "RastLoadVisualPanel1.genosetsIdButton.text")); // NOI18N
        genosetsIdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genosetsIdButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(lookupButton);
        org.openide.awt.Mnemonics.setLocalizedText(lookupButton, org.openide.util.NbBundle.getMessage(RastLoadVisualPanel1.class, "RastLoadVisualPanel1.lookupButton.text")); // NOI18N
        lookupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lookupButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(newButton, org.openide.util.NbBundle.getMessage(RastLoadVisualPanel1.class, "RastLoadVisualPanel1.newButton.text")); // NOI18N
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(fastaFileLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fastaFileTextField))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rastFileTextField)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rastButton)
                            .addComponent(fastaButton, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(lookupButton)
                    .addComponent(genosetsIdButton)
                    .addComponent(loadFastaButton)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(organismComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rastFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rastButton)
                    .addComponent(jLabel1))
                .addGap(32, 32, 32)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loadFastaButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fastaFileLabel)
                    .addComponent(fastaFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fastaButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(genosetsIdButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lookupButton)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(organismComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newButton))
                .addContainerGap(56, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rastButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rastButtonActionPerformed
        //The default dir to use if no value is stored
        File home = new File(System.getProperty("user.home"));
        //Now build a file chooser and invoke the dialog in one line of code
        //"libraries-dir" is our unique key
        File toAdd = new FileChooserBuilder("AddFileDirectory").setTitle("Select RAST File").
                setDefaultWorkingDirectory(home).setApproveText("Open").setDirectoriesOnly(false).showOpenDialog();
        //Result will be null if the user clicked cancel or closed the dialog w/o OK
        if (toAdd != null) {
            //set the directory as the parent
            NbPreferences.forModule(FileChooserBuilder.class).put("AddFileDirectory", toAdd.getParent());
            //do something
            rastFile = toAdd;
            rastFileTextField.setText(rastFile.getAbsolutePath());
//            propertyChanged();
        }
    }//GEN-LAST:event_rastButtonActionPerformed

    private void fastaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fastaButtonActionPerformed
        //The default dir to use if no value is stored
        File home = new File(System.getProperty("user.home"));
        //Now build a file chooser and invoke the dialog in one line of code
        //"libraries-dir" is our unique key
        File toAdd = new FileChooserBuilder("AddFileDirectory").setTitle("Select FASTA Nucleotide File").
                setDefaultWorkingDirectory(home).setApproveText("Open").setDirectoriesOnly(false).showOpenDialog();
        //Result will be null if the user clicked cancel or closed the dialog w/o OK
        if (toAdd != null) {
            //set the directory as the parent
            NbPreferences.forModule(FileChooserBuilder.class).put("AddFileDirectory", toAdd.getParent());
            //do something
            fastaFile = toAdd;
            fastaFileTextField.setText(fastaFile.getAbsolutePath());
//            propertyChanged();
        }
    }//GEN-LAST:event_fastaButtonActionPerformed

    private void loadFastaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadFastaButtonActionPerformed
        updateRadio();

    }//GEN-LAST:event_loadFastaButtonActionPerformed

    private void genosetsIdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genosetsIdButtonActionPerformed
        updateRadio();
    }//GEN-LAST:event_genosetsIdButtonActionPerformed

    private void lookupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lookupButtonActionPerformed
        updateRadio();
    }//GEN-LAST:event_lookupButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        NewOrganismPanel orgPanel = new NewOrganismPanel();
        DialogDescriptor descriptor = new DialogDescriptor(new JScrollPane(orgPanel), "Create a new organism", true, DialogDescriptor.OK_CANCEL_OPTION, DialogDescriptor.OK_OPTION, null);
        Dialog dialog = DialogDisplayer.getDefault().createDialog(descriptor);
        dialog.setVisible(true);
        dialog.toFront();
        boolean cancelled = descriptor.getValue() != DialogDescriptor.OK_OPTION;
        if (!cancelled) {
            //add organism
            OrganismPersister persister = OrganismPersister.instantiate();
            Organism org = createOrganism(orgPanel);
            persister.setup(org);
            DataManager mgr = DataManager.getDefault();
            mgr.persist(Collections.singletonList(persister));
            updateOrganisms(org);
        }
    }//GEN-LAST:event_newButtonActionPerformed

    private void updateRadio() {
        fastaFileLabel.setEnabled(loadFastaButton.isSelected());
        fastaFileTextField.setEnabled(loadFastaButton.isSelected());
        fastaButton.setEnabled(loadFastaButton.isSelected());

        if (loadFastaButton.isSelected()) {
            this.idType = RastLoadWizardPanel1.ID_TYPE.LOAD_FASTA;
        } else if (lookupButton.isSelected()) {
            this.idType = RastLoadWizardPanel1.ID_TYPE.ID_LOOKUP;
        } else if (genosetsIdButton.isSelected()) {
            this.idType = RastLoadWizardPanel1.ID_TYPE.GENOSETS_ID;
        }
        this.cs.fireChange();
    }

    public RastLoadWizardPanel1.ID_TYPE getIdType() {
        return this.idType;
    }

    public void addChangeListener(ChangeListener l) {
        this.cs.addChangeListener(l);
    }

    public void removeChangeListener(ChangeListener l) {
        this.cs.removeChangeListener(l);
    }

    private void updateOrganisms(Organism org) {
        Children children = Children.create(new OrganismChildFactory(), false);
        AbstractNode root = new AbstractNode(children);
        OrganismChildFactory.OrganismNode orgNode = null;
        if (org != null) {
            for (Node node : children.getNodes()) {
                if (node instanceof OrganismChildFactory.OrganismNode) {
                    OrganismChildFactory.OrganismNode orgNodeTemp = (OrganismChildFactory.OrganismNode) node;
                    if (orgNodeTemp.getOrganism().equals(org)) {
                        orgNode = orgNodeTemp;
                    }
                }
            }
        }
        this.em.setRootContext(root);
        if (orgNode != null) {
            try {
                this.em.setExploredContextAndSelection(root, new Node[]{orgNode});
                this.organismComboBox.setSelectedItem(orgNode);
            } catch (PropertyVetoException ex) {
            }
        }
        this.cs.fireChange();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton fastaButton;
    private javax.swing.JLabel fastaFileLabel;
    private javax.swing.JTextField fastaFileTextField;
    private javax.swing.JRadioButton genosetsIdButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JRadioButton loadFastaButton;
    private javax.swing.JRadioButton lookupButton;
    private javax.swing.JButton newButton;
    private javax.swing.JComboBox organismComboBox;
    private javax.swing.JButton rastButton;
    private javax.swing.JTextField rastFileTextField;
    // End of variables declaration//GEN-END:variables

    @Override
    public ExplorerManager getExplorerManager() {
        return em;
    }

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        this.cs.fireChange();
    }

    public Organism getOrganism() {
        for (Node node : em.getSelectedNodes()) {
            if (node instanceof OrganismChildFactory.OrganismNode) {
                return ((OrganismChildFactory.OrganismNode) node).getOrganism();
            }
        }
        return null;
    }

    private Organism createOrganism(NewOrganismPanel orgPanel) {
        Organism org = new Organism();
        org.setKingdom(orgPanel.getKingdom());
        org.setPhylum(orgPanel.getPhlum());
        org.setTaxClass(orgPanel.getTaxClass());
        org.setTaxOrder(orgPanel.getOrder());
        org.setFamily(orgPanel.getFamily());
        org.setGenus(orgPanel.getFamily());
        org.setSpecies(orgPanel.getSpecies());
        org.setStrain(orgPanel.getStrain());
        org.setSample(orgPanel.getSample());
        org.setShortName(orgPanel.getShortName());
        org.setProjectId(orgPanel.getProject());
        return org;
    }

}
